<shoddybattle>

<move name="Absorb" id="0">
<type>Grass</type>
<class>Special</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
]]>
</init>
</move>

<move name="Acid" id="1">
<type>Poison</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Acid Armor" id="2">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 2));
]]>
</use>
</move>

<move name="Acupressure" id="3">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<!--
  Note: This move actually has a unique target class. It can target either
        the user or an ally.
-->
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Aerial Ace" id="4">
<type>Flying</type>
<class>Physical</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Aeroblast" id="5">
<type>Flying</type>
<class>Special</class>
<power>100</power>
<accuracy>0.95</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Agility" id="6">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPEED, 2));
]]>
</use>
</move>

<move name="Air Cutter" id="7">
<type>Flying</type>
<class>Special</class>
<power>55</power>
<accuracy>0.95</accuracy>
<pp>25</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Air Slash" id="8">
<type>Flying</type>
<class>Special</class>
<power>75</power>
<accuracy>0.95</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Amnesia" id="9">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPDEFENCE, 2));
]]>
</use>
</move>

<move name="Ancientpower" id="10">
<type>Rock</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Aqua Jet" id="11">
<type>Water</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Aqua Ring" id="12">
<type>Water</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Aqua Tail" id="13">
<type>Water</type>
<class>Physical</class>
<power>90</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Arm Thrust" id="14">
<type>Fighting</type>
<class>Physical</class>
<power>15</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Aromatherapy" id="15">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Assist" id="16">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Assurance" id="17">
<type>Dark</type>
<class>Physical</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Astonish" id="18">
<type>Ghost</type>
<class>Physical</class>
<power>30</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Attack Order" id="19">
<type>Bug</type>
<class>Physical</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Attract" id="20">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Aura Sphere" id="21">
<type>Fighting</type>
<class>Special</class>
<power>90</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Aurora Beam" id="22">
<type>Ice</type>
<class>Special</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, -1), 0.1]]);
]]>
</init>
</move>

<move name="Avalanche" id="23">
<type>Ice</type>
<class>Physical</class>
<priority>-4</priority>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Barrage" id="24">
<type>Normal</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Barrier" id="25">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 2));
]]>
</use>
</move>

<move name="Baton Pass" id="26">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Beat Up" id="27">
<type>Dark</type>
<class>Physical</class>
<power>10</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Belly Drum" id="28">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bide" id="29">
<type>Normal</type>
<class>Physical</class>
<priority>1</priority>
<power>1</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<contact/>
	<protect/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bind" id="30">
<type>Normal</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.75</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bite" id="31">
<type>Dark</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Blast Burn" id="32">
<type>Fire</type>
<class>Special</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Blaze Kick" id="33">
<type>Fire</type>
<class>Physical</class>
<power>85</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Blizzard" id="34">
<type>Ice</type>
<class>Special</class>
<power>120</power>
<accuracy>0.70</accuracy>
<pp>5</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Block" id="35">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Body Slam" id="36">
<type>Normal</type>
<class>Physical</class>
<power>85</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Bone Club" id="37">
<type>Ground</type>
<class>Physical</class>
<power>65</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1]]);
]]>
</init>
</move>

<move name="Bone Rush" id="38">
<type>Ground</type>
<class>Physical</class>
<power>25</power>
<accuracy>0.80</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Bonemerang" id="39">
<type>Ground</type>
<class>Physical</class>
<power>50</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bounce" id="40">
<type>Flying</type>
<class>Physical</class>
<power>85</power>
<accuracy>0.85</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
makeChargeMove(this,
        Text.battle_messages_charge.wrap(7),
        ["Gust", "Thunder", "Twister", "Sky Uppercut"]);
]]>
</init>
</move>

<move name="Brave Bird" id="41">
<type>Flying</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 3);
]]>
</init>
</move>

<move name="Brick Break" id="42">
<type>Fighting</type>
<class>Physical</class>
<power>75</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Brine" id="43">
<type>Water</type>
<class>Special</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bubble" id="44">
<type>Water</type>
<class>Special</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Bubblebeam" id="45">
<type>Water</type>
<class>Special</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Bug Bite" id="46">
<type>Bug</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Bug Buzz" id="47">
<type>Bug</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Bulk Up" id="48">
<type>Fighting</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 1));
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 1));
]]>
</use>
</move>

<move name="Bullet Punch" id="49">
<type>Steel</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Bullet Seed" id="50">
<type>Grass</type>
<class>Physical</class>
<power>10</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Calm Mind" id="51">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPATTACK, 1));
user.applyStatus(user, new StatChangeEffect(Stat.SPDEFENCE, 1));
]]>
</use>
</move>

<move name="Camouflage" id="52">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Captivate" id="53">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Charge" id="54">
<type>Electric</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Charge Beam" id="55">
<type>Electric</type>
<class>Special</class>
<power>50</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, 1), 0.7, true]]);
]]>
</init>
</move>

<move name="Charm" id="56">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, -2)]]);
]]>
</init>
</move>

<move name="Chatter" id="57">
<type>Flying</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Clamp" id="58">
<type>Water</type>
<class>Physical</class>
<power>35</power>
<accuracy>0.75</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Close Combat" id="59">
<type>Fighting</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [
        [new StatChangeEffect(Stat.DEFENCE, -1), 1, true],
        [new StatChangeEffect(Stat.SPDEFENCE, -1), 1, true]
    ]);
]]>
</init>
</move>

<move name="Comet Punch" id="60">
<type>Normal</type>
<class>Physical</class>
<power>18</power>
<accuracy>0.85</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Confuse Ray" id="61">
<type>Ghost</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect]]);
]]>
</init>
</move>

<move name="Confusion" id="62">
<type>Psychic</type>
<class>Special</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.1]]);
]]>
</init>
</move>

<move name="Constrict" id="63">
<type>Normal</type>
<class>Physical</class>
<power>10</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Conversion" id="64">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Conversion 2" id="65">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Copycat" id="66">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>

</flags>
<use>
<![CDATA[
var move = field.lastMove;
if (!move) {
    field.print(Text.battle_messages(0));
    return;
}
user.execute(move);
]]>
</use>
</move>

<move name="Cosmic Power" id="67">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Cotton Spore" id="68">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0.85</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -2)]]);
]]>
</init>
</move>

<move name="Counter" id="69">
<type>Fighting</type>
<class>Physical</class>
<priority>-5</priority>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>
	<contact/>
</flags>
<init>
makeCounterMove(this, MoveClass.PHYSICAL, 2);
</init>
</move>

<move name="Covet" id="70">
<type>Normal</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Crabhammer" id="71">
<type>Water</type>
<class>Physical</class>
<power>90</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Cross Chop" id="72">
<type>Fighting</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.80</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Cross Poison" id="73">
<type>Poison</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.1]]);
]]>
</init>
</move>

<move name="Crunch" id="74">
<type>Dark</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1), 0.2]]);
]]>
</init>
</move>

<move name="Crush Claw" id="75">
<type>Normal</type>
<class>Physical</class>
<power>75</power>
<accuracy>0.95</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1), 0.5]]);
]]>
</init>
</move>

<move name="Crush Grip" id="76">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Curse" id="77">
<type>Typeless</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Cut" id="78">
<type>Normal</type>
<class>Physical</class>
<power>50</power>
<accuracy>0.95</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Dark Pulse" id="79">
<type>Dark</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.2]]);
]]>
</init>
</move>

<move name="Dark Void" id="80">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>0.80</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Defend Order" id="81">
<type>Bug</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [
        [new StatChangeEffect(Stat.DEFENCE, 1), 1, true],
        [new StatChangeEffect(Stat.SPDEFENCE, 1), 1, true]
    ]);
]]>
</init>
</move>

<move name="Defense Curl" id="82">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Defog" id="83">
<type>Flying</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Destiny Bond" id="84">
<type>Ghost</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Detect" id="85">
<type>Fighting</type>
<class>Other</class>
<priority>3</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Dig" id="86">
<type>Ground</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this,
        Text.battle_messages_charge.wrap(4),
        ["Earthquake", "Magnitude"]);
]]>
</init>
</move>

<move name="Disable" id="87">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.80</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Discharge" id="88">
<type>Electric</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Dive" id="89">
<type>Water</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this,
        Text.battle_messages_charge.wrap(6),
        ["Surf", "Whirlpool"]);
]]>
</init>
</move>

<move name="Dizzy Punch" id="90">
<type>Normal</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.2]]);
]]>
</init>
</move>

<move name="Doom Desire" id="91">
<type>Steel</type>
<class>Special</class>
<power>120</power>
<accuracy>0.85</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Double Hit" id="92">
<type>Normal</type>
<class>Physical</class>
<power>35</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Double Kick" id="93">
<type>Fighting</type>
<class>Physical</class>
<power>30</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Double Team" id="94">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.EVASION, 1));
]]>
</use>
</move>

<move name="Double-edge" id="95">
<type>Normal</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 3);
]]>
</init>
</move>

<move name="Doubleslap" id="96">
<type>Normal</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Draco Meteor" id="97">
<type>Dragon</type>
<class>Special</class>
<power>140</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, -2), 1, true]]);
]]>
</init>
</move>

<move name="Dragon Claw" id="98">
<type>Dragon</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Dragon Dance" id="99">
<type>Dragon</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 1));
user.applyStatus(user, new StatChangeEffect(Stat.SPEED, 1));
]]>
</use>
</move>

<move name="Dragon Pulse" id="100">
<type>Dragon</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Dragon Rage" id="101">
<type>Dragon</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
target.hp -= 40;
]]>
</use>
</move>

<move name="Dragon Rush" id="102">
<type>Dragon</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.75</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Dragonbreath" id="103">
<type>Dragon</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Drain Punch" id="104">
<type>Fighting</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
]]>
</init>
</move>

<move name="Dream Eater" id="105">
<type>Psychic</type>
<class>Special</class>
<power>100</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
var parent = this.use;
this.use = function(field, user, target, targets) {
    if (target.getStatus("SleepEffect") == null) {
        field.print(Text.battle_messages(0));
        return;
    }
    parent.call(this, field, user, target, targets);
};
]]>
</init>
</move>

<move name="Drill Peck" id="106">
<type>Flying</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Dynamicpunch" id="107">
<type>Fighting</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.50</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect]]);
]]>
</init>
</move>

<move name="Earth Power" id="108">
<type>Ground</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Earthquake" id="109">
<type>Ground</type>
<class>Physical</class>
<power>100</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
var effect = target.getStatus("ChargeMoveEffect");
if (effect && (effect.move.name == "Dig")) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Egg Bomb" id="110">
<type>Normal</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.75</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Embargo" id="111">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Ember" id="112">
<type>Fire</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Encore" id="113">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Endeavor" id="114">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
var damage = target.hp - user.hp;
if (damage <= 0) {
    field.print(Text.battle_messages(0));
    return;
}
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
target.hp -= damage;
]]>
</use>
</move>

<move name="Endure" id="115">
<type>Normal</type>
<class>Other</class>
<priority>3</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Energy Ball" id="116">
<type>Grass</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Eruption" id="117">
<type>Fire</type>
<class>Special</class>
<power>150</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Explosion" id="118">
<type>Normal</type>
<class>Physical</class>
<power>250</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Extrasensory" id="119">
<type>Psychic</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1]]);
]]>
</init>
</move>

<move name="Extremespeed" id="120">
<type>Normal</type>
<class>Physical</class>
<priority>1</priority>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Facade" id="121">
<type>Normal</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
if (user.getStatus(StatusEffect.SPECIAL_EFFECT)) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Faint Attack" id="122">
<type>Dark</type>
<class>Physical</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Fake Out" id="123">
<type>Normal</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Fake Tears" id="124">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -2)]]);
]]>
</init>
</move>

<move name="False Swipe" id="125">
<type>Normal</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Featherdance" id="126">
<type>Flying</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, -2)]]);
]]>
</init>
</move>

<move name="Feint" id="127">
<type>Normal</type>
<class>Physical</class>
<priority>2</priority>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Fire Blast" id="128">
<type>Fire</type>
<class>Special</class>
<power>120</power>
<accuracy>0.85</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Fire Fang" id="129">
<type>Fire</type>
<class>Physical</class>
<power>65</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1], [BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Fire Punch" id="130">
<type>Fire</type>
<class>Physical</class>
<power>75</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Fire Spin" id="131">
<type>Fire</type>
<class>Special</class>
<power>15</power>
<accuracy>0.70</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Fissure" id="132">
<type>Ground</type>
<class>Physical</class>
<power>1</power>
<accuracy>0.30</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Flail" id="133">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Flame Wheel" id="134">
<type>Fire</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Flamethrower" id="135">
<type>Fire</type>
<class>Special</class>
<power>95</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Flare Blitz" id="136">
<type>Fire</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
makeRecoilMove(this, 3);
]]>
</init>
</move>

<move name="Flash" id="137">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1)]]);
]]>
</init>
</move>

<move name="Flash Cannon" id="138">
<type>Steel</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Flatter" id="139">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this,
        [[ConfusionEffect], [new StatChangeEffect(Stat.SPATTACK, 1)]]
    );
]]>
</init>
</move>

<move name="Fling" id="140">
<type>Dark</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Fly" id="141">
<type>Flying</type>
<class>Physical</class>
<power>90</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this,
        Text.battle_messages_charge.wrap(5),
        ["Gust", "Thunder", "Twister", "Sky Uppercut"]);
]]>
</init>
</move>

<move name="Focus Blast" id="142">
<type>Fighting</type>
<class>Special</class>
<power>120</power>
<accuracy>0.70</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Focus Energy" id="143">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
if (user.getStatus("FocusEnergyEffect")) {
    field.print(Text.battle_messages(0));
    return;
}
var effect = new StatusEffect("FocusEnergyEffect");
effect.name = Text.battle_messages_unique(63);
effect.criticalModifier = function() {
    return 2;
};
user.applyStatus(user, effect);
field.print(Text.battle_messages_unique(64, user));
]]>
</use>
</move>

<move name="Focus Punch" id="144">
<type>Fighting</type>
<class>Physical</class>
<priority>-3</priority>
<power>150</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
</flags>
<init>
<![CDATA[
this.beginTurn = function(field, user) {
    if (!user.sendMessage("informBeginTurn")) {
        field.print(Text.battle_messages_unique(22, user));
    }
    var effect = new StatusEffect("FocusPunchEffect");
    effect.vetoTier = 11;    // TODO: Get the correct tier.
    effect.tier = 0;
    effect.tick = function() {
        this.subject.removeStatus(this);
    };
    effect.informDamaged = function(user, move) {
        if (move.name != "Pain Split") {
            this.lostFocus = true;
        }
    };
    effect.vetoExecution = function(field, user, target, move) {
        if (target != null)
            return false;
        if (!this.lostFocus)
            return false;
        if (user != this.subject)
            return false;
        field.print(Text.battle_messages_unique(23, user));
        return true;
    };
    user.applyStatus(user, effect);
}
]]>
</init>
</move>

<move name="Follow Me" id="145">
<type>Normal</type>
<class>Other</class>
<priority>3</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Force Palm" id="146">
<type>Fighting</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Foresight" id="147">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Frenzy Plant" id="148">
<type>Grass</type>
<class>Special</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Frustration" id="149">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Fury Attack" id="150">
<type>Normal</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Fury Cutter" id="151">
<type>Bug</type>
<class>Physical</class>
<power>10</power>
<accuracy>0.95</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Fury Swipes" id="152">
<type>Normal</type>
<class>Physical</class>
<power>18</power>
<accuracy>0.80</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Future Sight" id="153">
<type>Psychic</type>
<class>Special</class>
<power>80</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Gastro Acid" id="154">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Giga Drain" id="155">
<type>Grass</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
]]>
</init>
</move>

<move name="Giga Impact" id="156">
<type>Normal</type>
<class>Physical</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Glare" id="157">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect]]);
]]>
</init>
</move>

<move name="Grass Knot" id="158">
<type>Grass</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Grasswhistle" id="159">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0.55</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Gravity" id="160">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Growl" id="161">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>40</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, -1)]]);
]]>
</init>
</move>

<move name="Growth" id="162">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPATTACK, 1));
]]>
</use>
</move>

<move name="Grudge" id="163">
<type>Ghost</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Guard Swap" id="164">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Guillotine" id="165">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>0.30</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Gunk Shot" id="166">
<type>Poison</type>
<class>Physical</class>
<power>120</power>
<accuracy>0.70</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.3]]);
]]>
</init>
</move>

<move name="Gust" id="167">
<type>Flying</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
var effect = target.getStatus("ChargeMoveEffect");
if (effect) {
    var name = effect.move.name;
    if ((name == "Fly") || (name == "Bounce")) {
        this.power *= 2;
    }
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Gyro Ball" id="168">
<type>Steel</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hail" id="169">
<type>Ice</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>All</target>
<flags>
	<protect/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hammer Arm" id="170">
<type>Fighting</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Harden" id="171">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 1));
]]>
</use>
</move>

<move name="Haze" id="172">
<type>Ice</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Head Smash" id="173">
<type>Rock</type>
<class>Physical</class>
<power>150</power>
<accuracy>0.80</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 2);
]]>
</init>
</move>

<move name="Headbutt" id="174">
<type>Normal</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Heal Bell" id="175">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Heal Block" id="176">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Heal Order" id="177">
<type>Bug</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeRecoveryMove(this);
]]>
</init>
</move>

<move name="Healing Wish" id="178">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Heart Swap" id="179">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Heat Wave" id="180">
<type>Fire</type>
<class>Special</class>
<power>100</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.1]]);
]]>
</init>
</move>

<move name="Helping Hand" id="181">
<type>Normal</type>
<class>Other</class>
<priority>5</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Ally</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hi Jump Kick" id="182">
<type>Fighting</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.90</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hidden Power" id="183">
<type>Normal</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Horn Attack" id="184">
<type>Normal</type>
<class>Physical</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Horn Drill" id="185">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>0.30</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Howl" id="186">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 1));
]]>
</use>
</move>

<move name="Hydro Cannon" id="187">
<type>Water</type>
<class>Special</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hydro Pump" id="188">
<type>Water</type>
<class>Special</class>
<power>120</power>
<accuracy>0.80</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Hyper Beam" id="189">
<type>Normal</type>
<class>Special</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Hyper Fang" id="190">
<type>Normal</type>
<class>Physical</class>
<power>80</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1]]);
]]>
</init>
</move>

<move name="Hyper Voice" id="191">
<type>Normal</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
</move>

<move name="Hypnosis" id="192">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0.60</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
// TODO: generation-specific accuracy
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Ice Ball" id="193">
<type>Ice</type>
<class>Physical</class>
<power>30</power>
<accuracy>0.90</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
    <unimplemented/>
</flags>
<init>
<![CDATA[

]]>
</init>
</move>

<move name="Ice Beam" id="194">
<type>Ice</type>
<class>Special</class>
<power>95</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FreezeEffect, 0.1]]);
]]>
</init>
</move>

<move name="Ice Fang" id="195">
<type>Ice</type>
<class>Physical</class>
<power>65</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1], [FreezeEffect, 0.1]]);
]]>
</init>
</move>

<move name="Ice Punch" id="196">
<type>Ice</type>
<class>Physical</class>
<power>75</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FreezeEffect, 0.1]]);
]]>
</init>
</move>

<move name="Ice Shard" id="197">
<type>Ice</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Icicle Spear" id="198">
<type>Ice</type>
<class>Physical</class>
<power>10</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Icy Wind" id="199">
<type>Ice</type>
<class>Special</class>
<power>55</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Imprison" id="200">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Ingrain" id="201">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Iron Defense" id="202">
<type>Steel</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 2));
]]>
</use>
</move>

<move name="Iron Head" id="203">
<type>Steel</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Iron Tail" id="204">
<type>Steel</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.75</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1), 0.3]]);
]]>
</init>
</move>

<move name="Judgment" id="205">
<type>Normal</type>
<class>Special</class>
<power>100</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Jump Kick" id="206">
<type>Fighting</type>
<class>Physical</class>
<power>85</power>
<accuracy>0.95</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Karate Chop" id="207">
<type>Fighting</type>
<class>Physical</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Kinesis" id="208">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0.80</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1)]]);
]]>
</init>
</move>

<move name="Knock Off" id="209">
<type>Dark</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Last Resort" id="210">
<type>Normal</type>
<class>Physical</class>
<power>130</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
var usable = false;
var count = user.moveCount;
if (count != 1) {
    usable = true;
    for (var i = 0; i < count; ++i) {
        if (user.getMove(i) != this) {
            if (!user.isMoveUsed(i)) {
                usable = false;
                break;
            }
        }
    }
}
if (usable) {
    target.hp -= field.calculate(this, user, target, targets);
} else {
    field.print(Text.battle_messages(0));
}
]]>
</use>
</move>

<move name="Lava Plume" id="211">
<type>Fire</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.3]]);
]]>
</init>
</move>

<!--
    TODO: This move has lower power (70) in RSE.
-->
<move name="Leaf Blade" id="212">
<type>Grass</type>
<class>Physical</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Leaf Storm" id="213">
<type>Grass</type>
<class>Special</class>
<power>140</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, -2), 1, true]]);
]]>
</init>
</move>

<move name="Leech Life" id="214">
<type>Bug</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
]]>
</init>
</move>

<move name="Leech Seed" id="215">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Leer" id="216">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1)]]);
]]>
</init>
</move>

<move name="Lick" id="217">
<type>Ghost</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Light Screen" id="218">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Lock-on" id="219">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Lovely Kiss" id="220">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Low Kick" id="221">
<type>Fighting</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Lucky Chant" id="222">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>Allies</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Lunar Dance" id="223">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Luster Purge" id="224">
<type>Psychic</type>
<class>Special</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.5]]);
]]>
</init>
</move>

<move name="Mach Punch" id="225">
<type>Fighting</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Magic Coat" id="226">
<type>Psychic</type>
<class>Other</class>
<priority>4</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Magical Leaf" id="227">
<type>Grass</type>
<class>Special</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Magma Storm" id="228">
<type>Fire</type>
<class>Special</class>
<power>120</power>
<accuracy>0.70</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Magnet Bomb" id="229">
<type>Steel</type>
<class>Physical</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Magnet Rise" id="230">
<type>Electric</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Magnitude" id="231">
<type>Ground</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
var effect = user.getStatus("MagnitudeEffect");
if (!effect) {
    effect = new StatusEffect("MagnitudeEffect");
    effect.informFinishedExecution = function() {
        this.subject.removeStatus(this);
    };
    var magnitude;
    var rand = field.random(0, 100);
    if (rand < 5) {
        effect.power = 10;
        magnitude = 4;
    } else if (rand < 15) {
        effect.power = 30;
        magnitude = 5;
    } else if (rand < 35) {
        effect.power = 50;
        magnitude = 6;
    } else if (rand < 65) {
        effect.power = 70;
        magnitude = 7;
    } else if (rand < 85) {
        effect.power = 90;
        magnitude = 8;
    } else if (rand < 95) {
        effect.power = 110;
        magnitude = 9;
    } else {
        effect.power = 150;
        magnitude = 10;
    }
    user.applyStatus(user, effect);
    field.print(Text.battle_messages_unique(14, magnitude));
}
this.power = effect.power;
effect = target.getStatus("ChargeMoveEffect");
if (effect && (effect.move.name == "Dig")) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>


<!--
   Note: This move actually has a unique target class.
-->
<move name="Me First" id="232">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mean Look" id="233">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Meditate" id="234">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 1));
]]>
</use>
</move>

<move name="Mega Drain" id="235">
<type>Grass</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, -2);
]]>
</init>
</move>

<move name="Mega Kick" id="236">
<type>Normal</type>
<class>Physical</class>
<power>120</power>
<accuracy>0.75</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Mega Punch" id="237">
<type>Normal</type>
<class>Physical</class>
<power>80</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Megahorn" id="238">
<type>Bug</type>
<class>Physical</class>
<power>120</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Memento" id="239">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Metal Burst" id="240">
<type>Steel</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Lastenemy</target>
<flags>
	<memorable/>
</flags>
<init>
makeCounterMove(this, undefined, 1.5);
</init>
</move>

<move name="Metal Claw" id="241">
<type>Steel</type>
<class>Physical</class>
<power>50</power>
<accuracy>0.95</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, 1), 0.1, true]]);
]]>
</init>
</move>

<move name="Metal Sound" id="242">
<type>Steel</type>
<class>Other</class>
<power>0</power>
<accuracy>0.85</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -2)]]);
]]>
</init>
</move>

<move name="Meteor Mash" id="243">
<type>Steel</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ATTACK, 1), 0.2, true]]);
]]>
</init>
</move>

<move name="Metronome" id="244">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Milk Drink" id="245">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeRecoveryMove(this);
]]>
</init>
</move>

<move name="Mimic" id="246">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mind Reader" id="247">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Minimize" id="248">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.EVASION, 1));
var effect = new StatusEffect("MinimiseEffect");
effect.passable = false;
user.applyStatus(user, effect);
]]>
</use>
</move>

<move name="Miracle Eye" id="249">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mirror Coat" id="250">
<type>Psychic</type>
<class>Special</class>
<priority>-5</priority>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>

</flags>
<init>
makeCounterMove(this, MoveClass.SPECIAL, 2);
</init>
</move>

<move name="Mirror Move" id="251">
<type>Flying</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>

</flags>
<use>
<![CDATA[
var move = user.memory;
if ((move == null) || (move.name == "Encore")) {
    // Note: Mirror Move specifically fails when copying Encore
    field.print(Text.battle_messages(0));
    return;
}

// Execute the move on a randomised target.
user.execute(move);
]]>
</use>
</move>

<move name="Mirror Shot" id="252">
<type>Steel</type>
<class>Special</class>
<power>65</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1), 0.3]]);
]]>
</init>
</move>

<move name="Mist" id="253">
<type>Ice</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mist Ball" id="254">
<type>Psychic</type>
<class>Special</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, -1), 0.5]]);
]]>
</init>
</move>

<move name="Moonlight" id="255">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Morning Sun" id="256">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mud Bomb" id="257">
<type>Ground</type>
<class>Special</class>
<power>65</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1), 0.3]]);
]]>
</init>
</move>

<move name="Mud Shot" id="258">
<type>Ground</type>
<class>Special</class>
<power>55</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Mud Sport" id="259">
<type>Ground</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Mud-Slap" id="260">
<type>Ground</type>
<class>Special</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1), 0.1]]);
]]>
</init>
</move>

<move name="Muddy Water" id="261">
<type>Water</type>
<class>Special</class>
<power>95</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1), 0.3]]);
]]>
</init>
</move>

<move name="Nasty Plot" id="262">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPATTACK, 2));
]]>
</use>
</move>

<move name="Natural Gift" id="263">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Nature Power" id="264">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Needle Arm" id="265">
<type>Grass</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Night Shade" id="266">
<type>Ghost</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
target.hp -= user.level;
]]>
</use>
</move>

<move name="Night Slash" id="267">
<type>Dark</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Nightmare" id="268">
<type>Ghost</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Octazooka" id="269">
<type>Water</type>
<class>Special</class>
<power>65</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1), 0.5]]);
]]>
</init>
</move>

<move name="Odor Sleuth" id="270">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Ominous Wind" id="271">
<type>Ghost</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Outrage" id="272">
<type>Dragon</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Randenemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Overheat" id="273">
<type>Fire</type>
<class>Special</class>
<power>140</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, -2), 1, true]]);
]]>
</init>
</move>

<move name="Pain Split" id="274">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<use>
<![CDATA[
var hp = Math.floor((target.hp + user.hp) / 2);
user.hp = hp;
target.hp = hp;
]]>
</use>
</move>

<move name="Pay Day" id="275">
<type>Normal</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
target.hp -= field.calculate(this, user, target, targets);
field.print(Text.battle_messages_unique(3));
]]>
</use>
</move>

<move name="Payback" id="276">
<type>Dark</type>
<class>Physical</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Peck" id="277">
<type>Flying</type>
<class>Physical</class>
<power>35</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Perish Song" id="278">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Petal Dance" id="279">
<type>Grass</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Randenemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Pin Missile" id="280">
<type>Bug</type>
<class>Physical</class>
<power>14</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Pluck" id="281">
<type>Flying</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Poison Fang" id="282">
<type>Poison</type>
<class>Physical</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Poison Gas" id="283">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>0.55</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect]]);
]]>
</init>
</move>

<move name="Poison Jab" id="284">
<type>Poison</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.3]]);
]]>
</init>
</move>

<move name="Poison Sting" id="285">
<type>Poison</type>
<class>Physical</class>
<power>15</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.3]]);
]]>
</init>
</move>

<move name="Poison Tail" id="286">
<type>Poison</type>
<class>Physical</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.1]]);
]]>
</init>
</move>

<move name="Poisonpowder" id="287">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect]]);
]]>
</init>
</move>

<move name="Pound" id="288">
<type>Normal</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Powder Snow" id="289">
<type>Ice</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FreezeEffect, 0.1]]);
]]>
</init>
</move>

<move name="Power Gem" id="290">
<type>Rock</type>
<class>Special</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Power Swap" id="291">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Power Trick" id="292">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Power Whip" id="293">
<type>Grass</type>
<class>Physical</class>
<power>120</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Present" id="294">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Protect" id="295">
<type>Normal</type>
<class>Other</class>
<priority>3</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Psybeam" id="296">
<type>Psychic</type>
<class>Special</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.1]]);
]]>
</init>
</move>

<move name="Psych Up" id="297">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
for (var i = 1; i < 8; ++i) {
    var level = target.getStatLevel(i) - user.getStatLevel(i);
    if (level) {
        var effect = new StatChangeEffect(i, level);
        effect.silent = true;
        user.applyStatus(user, effect);
    }
}
field.print(Text.battle_messages_unique(17, user));
]]>
</use>
</move>

<move name="Psychic" id="298">
<type>Psychic</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.1]]);
]]>
</init>
</move>

<move name="Psycho Boost" id="299">
<type>Psychic</type>
<class>Special</class>
<power>140</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPATTACK, -2), 1, true]]);
]]>
</init>
</move>

<move name="Psycho Cut" id="300">
<type>Psychic</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Psycho Shift" id="301">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<use>
<![CDATA[
var effect = user.getStatus(StatusEffect.SPECIAL_EFFECT);
if (!effect || !target.applyStatus(user, effect)) {
    field.print(Text.battle_messages(0));
    return;
}
user.removeStatus(effect);
]]>
</use>
</move>

<move name="Psywave" id="302">
<type>Psychic</type>
<class>Special</class>
<power>1</power>
<accuracy>0.80</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
var damage = Math.floor(user.level * (field.random(0, 10) * 10 + 50) / 100);
target.hp -= damage;
]]>
</use>
</move>

<move name="Punishment" id="303">
<type>Dark</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
var n = 0;
for (var i = 1; i < 8; ++i) {
    var level = target.getStatLevel(i);
    if (level > 0) {
        n += level;
    }
}
this.power = 60 + 20 * n;
if (this.power > 200) {
    this.power = 200;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Pursuit" id="304">
<type>Dark</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
var move = this;
this.beginTurn = function(field, user, target) {
    if (user.sendMessage("informBeginTurn")) {
        return;
    }
    var effect = new StatusEffect("PursuitEffect");
    effect.vetoTier = -5;   // TODO (?)
    effect.target = target;
    effect.tier = 0;
    effect.tick = function() {
        this.subject.removeStatus(this);
    };
    effect.informWithdraw = function(subject) {
        if (subject != this.target)
            return;
        this.executed = true;
        this.subject.execute(move, subject);
    };
    effect.vetoExecution = function(field, user, target, move) {
        if (target != null)
            return false;
        if (user != this.subject)
            return false;
        if (!this.executed)
            return false;
        return true;
    };
    user.applyStatus(user, effect);
};
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
var effect = user.getStatus("PursuitEffect");
if (effect && effect.executed) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Quick Attack" id="305">
<type>Normal</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Rage" id="306">
<type>Normal</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Rain Dance" id="307">
<type>Water</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Rapid Spin" id="308">
<type>Normal</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Razor Leaf" id="309">
<type>Grass</type>
<class>Physical</class>
<power>55</power>
<accuracy>0.95</accuracy>
<pp>25</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Razor Wind" id="310">
<type>Normal</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this, Text.battle_messages_charge.wrap(1));
]]>
</init>
</move>

<move name="Recover" id="311">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeRecoveryMove(this);
]]>
</init>
</move>

<move name="Recycle" id="312">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Reflect" id="313">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Refresh" id="314">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Rest" id="315">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Return" id="316">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Revenge" id="317">
<type>Fighting</type>
<class>Physical</class>
<priority>-4</priority>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Reversal" id="318">
<type>Fighting</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Roar" id="319">
<type>Normal</type>
<class>Other</class>
<priority>-6</priority>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Roar Of Time" id="320">
<type>Dragon</type>
<class>Special</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Rock Blast" id="321">
<type>Rock</type>
<class>Physical</class>
<power>25</power>
<accuracy>0.80</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Rock Climb" id="322">
<type>Normal</type>
<class>Physical</class>
<power>90</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.2]]);
]]>
</init>
</move>

<move name="Rock Polish" id="323">
<type>Rock</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPEED, 2));
]]>
</use>
</move>

<move name="Rock Slide" id="324">
<type>Rock</type>
<class>Physical</class>
<power>75</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Rock Smash" id="325">
<type>Fighting</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1), 0.5]]);
]]>
</init>
</move>

<move name="Rock Throw" id="326">
<type>Rock</type>
<class>Physical</class>
<power>50</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Rock Tomb" id="327">
<type>Rock</type>
<class>Physical</class>
<power>50</power>
<accuracy>0.80</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1), 0.1]]);
]]>
</init>
</move>

<move name="Rock Wrecker" id="328">
<type>Rock</type>
<class>Physical</class>
<power>150</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Role Play" id="329">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Rolling Kick" id="330">
<type>Fighting</type>
<class>Physical</class>
<power>60</power>
<accuracy>0.85</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
]]>
</init>
</move>

<move name="Rollout" id="331">
<type>Rock</type>
<class>Physical</class>
<power>30</power>
<accuracy>0.90</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Roost" id="332">
<type>Flying</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sacred Fire" id="333">
<type>Fire</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.95</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect, 0.5]]);
]]>
</init>
</move>

<move name="Safeguard" id="334">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>25</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sand Tomb" id="335">
<type>Ground</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.70</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sand-Attack" id="336">
<type>Ground</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1)]]);
]]>
</init>
</move>

<move name="Sandstorm" id="337">
<type>Rock</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Scary Face" id="338">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -2)]]);
]]>
</init>
</move>

<move name="Scratch" id="339">
<type>Normal</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Screech" id="340">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.85</accuracy>
<pp>40</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -2)]]);
]]>
</init>
</move>

<move name="Secret Power" id="341">
<type>Normal</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Seed Bomb" id="342">
<type>Grass</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Seed Flare" id="343">
<type>Grass</type>
<class>Special</class>
<power>120</power>
<accuracy>0.85</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -2), 0.4]]);
]]>
</init>
</move>

<move name="Seismic Toss" id="344">
<type>Fighting</type>
<class>Physical</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
target.hp -= user.level;
]]>
</use>
</move>

<move name="Selfdestruct" id="345">
<type>Normal</type>
<class>Physical</class>
<power>200</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Shadow Ball" id="346">
<type>Ghost</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPDEFENCE, -1), 0.2]]);
]]>
</init>
</move>

<move name="Shadow Claw" id="347">
<type>Ghost</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Shadow Force" id="348">
<type>Ghost</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this, Text.battle_messages_charge.wrap(8), []);
]]>
</init>
</move>

<move name="Shadow Punch" id="349">
<type>Ghost</type>
<class>Physical</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Shadow Sneak" id="350">
<type>Ghost</type>
<class>Physical</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sharpen" id="351">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 1));
]]>
</use>
</move>

<move name="Sheer Cold" id="352">
<type>Ice</type>
<class>Special</class>
<power>1</power>
<accuracy>0.30</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Shock Wave" id="353">
<type>Electric</type>
<class>Special</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Signal Beam" id="354">
<type>Bug</type>
<class>Special</class>
<power>75</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.1]]);
]]>
</init>
</move>

<move name="Silver Wind" id="355">
<type>Bug</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sing" id="356">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.55</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Sketch" id="357">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>1</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Skill Swap" id="358">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Skull Bash" id="359">
<type>Normal</type>
<class>Physical</class>
<power>100</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeChargeMove(this, Text.battle_messages_charge.wrap(2));
this.additional = function(user) {
    // Additional effect on charge turn: +1 defence.
    user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 1));
};
]]>
</init>
</move>

<move name="Sky Attack" id="360">
<type>Flying</type>
<class>Physical</class>
<power>140</power>
<accuracy>0.90</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
makeChargeMove(this, Text.battle_messages_charge.wrap(3));
]]>
</init>
</move>

<move name="Sky Uppercut" id="361">
<type>Fighting</type>
<class>Physical</class>
<power>85</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Slack Off" id="362">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeRecoveryMove(this);
]]>
</init>
</move>

<move name="Slam" id="363">
<type>Normal</type>
<class>Physical</class>
<power>80</power>
<accuracy>0.75</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Slash" id="364">
<type>Normal</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Sleep Powder" id="365">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Sleep Talk" id="366">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sludge" id="367">
<type>Poison</type>
<class>Special</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.3]]);
]]>
</init>
</move>

<move name="Sludge Bomb" id="368">
<type>Poison</type>
<class>Special</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.3]]);
]]>
</init>
</move>

<move name="Smellingsalt" id="369">
<type>Normal</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
var effect = target.getStatus("ParalysisEffect");
if (effect) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
if (effect) {
    target.removeStatus(effect);
}
]]>
</use>
</move>

<move name="Smog" id="370">
<type>Poison</type>
<class>Special</class>
<power>20</power>
<accuracy>0.70</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[PoisonEffect, 0.4]]);
]]>
</init>
</move>

<move name="Smokescreen" id="371">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.ACCURACY, -1)]]);
]]>
</init>
</move>

<move name="Snatch" id="372">
<type>Dark</type>
<class>Other</class>
<priority>4</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Lastenemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Snore" id="373">
<type>Normal</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.3]]);
var parent = this.use;
this.use = function(field, user, target, targets) {
    if (user.getStatus("SleepEffect") == null) {
        field.print(Text.battle_messages(0));
        return;
    }
    parent.call(this, field, user, target, targets);
};
]]>
</init>
</move>

<move name="Softboiled" id="374">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<init>
<![CDATA[
makeRecoveryMove(this);
]]>
</init>
</move>

<move name="Solarbeam" id="375">
<type>Grass</type>
<class>Special</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sonicboom" id="376">
<type>Normal</type>
<class>Special</class>
<power>1</power>
<accuracy>0.90</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
target.hp -= 20;
]]>
</use>
</move>

<move name="Spacial Rend" id="377">
<type>Dragon</type>
<class>Special</class>
<power>100</power>
<accuracy>0.95</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Spark" id="378">
<type>Electric</type>
<class>Physical</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Spider Web" id="379">
<type>Bug</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Spike Cannon" id="380">
<type>Normal</type>
<class>Physical</class>
<power>20</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeMultipleHitMove(this);
]]>
</init>
</move>

<move name="Spikes" id="381">
<type>Ground</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemyfield</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Spit Up" id="382">
<type>Normal</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Spite" id="383">
<type>Ghost</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Splash" id="384">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	
</flags>
<use>
<![CDATA[
field.print(Text.battle_messages_unique(2));
]]>
</use>
</move>

<move name="Spore" id="385">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
makeStatusMove(this, [[SleepEffect]]);
</init>
</move>

<move name="Stealth Rock" id="386">
<type>Rock</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemyfield</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Steel Wing" id="387">
<type>Steel</type>
<class>Physical</class>
<power>70</power>
<accuracy>0.90</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, 1), 0.1, true]]);
]]>
</init>
</move>

<move name="Stockpile" id="388">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Stomp" id="389">
<type>Normal</type>
<class>Physical</class>
<power>65</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
if (target.getStatus("MinimiseEffect")) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
]]>
</use>
</move>

<move name="Stone Edge" id="390">
<type>Rock</type>
<class>Physical</class>
<power>100</power>
<accuracy>0.80</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<high-critical/>
</flags>
</move>

<move name="Strength" id="391">
<type>Normal</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="String Shot" id="392">
<type>Bug</type>
<class>Other</class>
<power>0</power>
<accuracy>0.95</accuracy>
<pp>40</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.SPEED, -1)]]);
]]>
</init>
</move>

<move name="Struggle" id="393">
<type>Normal</type>
<class>Physical</class>
<power>50</power>
<accuracy>0</accuracy>
<pp>1</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Stun Spore" id="394">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect]]);
]]>
</init>
</move>

<move name="Submission" id="395">
<type>Fighting</type>
<class>Physical</class>
<power>80</power>
<accuracy>0.80</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 4);
]]>
</init>
</move>

<move name="Substitute" id="396">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sucker Punch" id="397">
<type>Dark</type>
<class>Physical</class>
<priority>1</priority>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sunny Day" id="398">
<type>Fire</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Super Fang" id="399">
<type>Normal</type>
<class>Physical</class>
<power>1</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<use>
<![CDATA[
if (target.isImmune(this)) {
    field.print(Text.battle_messages(1, target));
    return;
}
var damage = target.hp / 2;
target.hp -= damage;
]]>
</use>
</move>

<move name="Superpower" id="400">
<type>Fighting</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [
        [new StatChangeEffect(Stat.ATTACK, -1), 1, true],
        [new StatChangeEffect(Stat.DEFENCE, -1), 1, true]
    ]);
]]>
</init>
</move>

<move name="Supersonic" id="401">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.55</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect]]);
]]>
</init>
</move>

<move name="Surf" id="402">
<type>Water</type>
<class>Special</class>
<power>95</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Swagger" id="403">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this,
        [[ConfusionEffect], [new StatChangeEffect(Stat.ATTACK, 2)]]
    );
]]>
</init>
</move>

<move name="Swallow" id="404">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Sweet Kiss" id="405">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect]]);
]]>
</init>
</move>

<move name="Sweet Scent" id="406">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.EVASION, -1)]]);
]]>
</init>
</move>

<move name="Swift" id="407">
<type>Normal</type>
<class>Special</class>
<power>60</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Switcheroo" id="408">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Swords Dance" id="409">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.ATTACK, 2));
]]>
</use>
</move>

<move name="Synthesis" id="410">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>User</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Tackle" id="411">
<type>Normal</type>
<class>Physical</class>
<power>35</power>
<accuracy>0.95</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Tail Glow" id="412">
<type>Bug</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.SPATTACK, 2));
]]>
</use>
</move>

<move name="Tail Whip" id="413">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[new StatChangeEffect(Stat.DEFENCE, -1)]]);
]]>
</init>
</move>

<move name="Tailwind" id="414">
<type>Flying</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>30</pp>
<target>Allies</target>
<flags>
	<snatch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Take Down" id="415">
<type>Normal</type>
<class>Physical</class>
<power>90</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 4);
]]>
</init>
</move>

<move name="Taunt" id="416">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<use>
<![CDATA[
if (target.getStatus("TauntEffect")) {
    field.print(Text.battle_messages(0));
    return;
}
var effect = new StatusEffect("TauntEffect");
effect.name = Text.battle_messages_unique(29);
effect.turns = field.random(3, 5);
effect.tier = 0;
effect.vetoTier = 4; // TODO (maybe)
effect.applyEffect = function() {
    field.print(Text.battle_messages_unique(28, this.subject));
    return true;
};
effect.tick = function() {
    if (--this.turns <= 0) {
        field.print(Text.battle_messages_unique(26, this.subject));
        this.subject.removeStatus(this);
    }
};
effect.vetoSelection = function(user, move) {
    if (user != this.subject)
        return false;
    return (move.moveClass == MoveClass.OTHER);
};
effect.vetoExecution = function(field, user, target, move) {
    if (target != null)
        return false;
    if (user != this.subject)
        return false;
    if (move.moveClass != MoveClass.OTHER)
        return false;
    field.print(Text.battle_messages_unique(27, this.subject, move));
    return true;
};
target.applyStatus(user, effect);
]]>
</use>
</move>

<move name="Teeter Dance" id="417">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Others</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect]]);
]]>
</init>
</move>

<move name="Teleport" id="418">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>User</target>
<flags>

</flags>
<use>
<![CDATA[
field.print(Text.battle_messages(0));
]]>
</use>
</move>

<move name="Thief" id="419">
<type>Dark</type>
<class>Physical</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Thrash" id="420">
<type>Normal</type>
<class>Physical</class>
<power>90</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Randenemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Thunder" id="421">
<type>Electric</type>
<class>Special</class>
<power>120</power>
<accuracy>0.70</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
// TODO: take care of weather effects!
makeStatusMove(this, [[ParalysisEffect, 0.3]]);
]]>
</init>
</move>

<move name="Thunder Fang" id="422">
<type>Electric</type>
<class>Physical</class>
<power>65</power>
<accuracy>0.95</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.1], [ParalysisEffect, 0.1]]);
]]>
</init>
</move>

<move name="Thunder Wave" id="423">
<type>Electric</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect]], true);
]]>
</init>
</move>

<move name="Thunderbolt" id="424">
<type>Electric</type>
<class>Special</class>
<power>95</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.1]]);
]]>
</init>
</move>

<move name="Thunderpunch" id="425">
<type>Electric</type>
<class>Physical</class>
<power>75</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.1]]);
]]>
</init>
</move>

<move name="Thundershock" id="426">
<type>Electric</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.1]]);
]]>
</init>
</move>

<move name="Tickle" id="427">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [
        [new StatChangeEffect(Stat.ATTACK, -1)],
        [new StatChangeEffect(Stat.DEFENCE, -1)]
    ]);
]]>
</init>
</move>

<move name="Torment" id="428">
<type>Dark</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<use>
<![CDATA[
if (target.getStatus("TormentEffect")) {
    field.print(Text.battle_messages(0));
    return;
}
var effect = new StatusEffect("TormentEffect");
effect.name = Text.battle_messages_unique(65);
effect.vetoSelection = function(user, move) {
    if (user != this.subject)
        return false;
    if (!this.set_) {
        this.move = user.lastMove;
        this.set_ = true;
    }
    if (!this.move)
        return false;
    return (this.move.name == move.name);
};
effect.informFinishedExecution = function() {
    this.move = this.subject.lastMove;
    this.set_ = true;
};
target.applyStatus(user, effect);
field.print(Text.battle_messages_unique(66, target));
]]>
</use>
</move>

<move name="Toxic" id="429">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>0.85</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Toxic Spikes" id="430">
<type>Poison</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>20</pp>
<target>Enemyfield</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Transform" id="431">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Tri Attack" id="432">
<type>Normal</type>
<class>Special</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
var effect = function(field) {
    var rand = field.random(1, 3);
    if (rand == 1) return BurnEffect;
    if (rand == 2) return FreezeEffect;
    return ParalysisEffect;
};
effect.delayed = true;
makeStatusMove(this, [[effect, 0.20]]);
]]>
</init>
</move>

<move name="Trick" id="433">
<type>Psychic</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Trick Room" id="434">
<type>Psychic</type>
<class>Other</class>
<priority>-7</priority>
<power>0</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>All</target>
<flags>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Triple Kick" id="435">
<type>Fighting</type>
<class>Physical</class>
<power>10</power>
<accuracy>0.90</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Trump Card" id="436">
<type>Normal</type>
<class>Special</class>
<power>1</power>
<accuracy>0</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Twineedle" id="437">
<type>Bug</type>
<class>Physical</class>
<power>25</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Twister" id="438">
<type>Dragon</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
var power_ = this.power;
this.prepare = function(field, user, target, targets) {
    this.power = power_;
    var effect = target.getStatus("ChargeMoveEffect");
    if (effect) {
        var name = effect.move.name;
        if ((name == "Fly") || (name == "Bounce")) {
            this.power *= 2;
        }
    }
};
makeStatusMove(this, [[FlinchEffect, 0.20]]);
]]>
</init>
</move>

<move name="U-turn" id="439">
<type>Bug</type>
<class>Physical</class>
<power>70</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Uproar" id="440">
<type>Normal</type>
<class>Special</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Randenemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Vacuum Wave" id="441">
<type>Fighting</type>
<class>Special</class>
<priority>1</priority>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Vicegrip" id="442">
<type>Normal</type>
<class>Physical</class>
<power>55</power>
<accuracy>1.00</accuracy>
<pp>30</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Vine Whip" id="443">
<type>Grass</type>
<class>Physical</class>
<power>35</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Vital Throw" id="444">
<type>Fighting</type>
<class>Physical</class>
<priority>-1</priority>
<power>70</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Volt Tackle" id="445">
<type>Electric</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect, 0.1]]);
makeRecoilMove(this, 3);
]]>
</init>
</move>

<move name="Wake-up Slap" id="446">
<type>Fighting</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
this.power_ = this.power;
]]>
</init>
<use>
<![CDATA[
this.power = this.power_;
var effect = target.getStatus("SleepEffect");
if (effect) {
    this.power *= 2;
}
target.hp -= field.calculate(this, user, target, targets);
if (effect) {
    target.removeStatus(effect);
}
]]>
</use>
</move>

<move name="Water Gun" id="447">
<type>Water</type>
<class>Special</class>
<power>40</power>
<accuracy>1.00</accuracy>
<pp>25</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Water Pulse" id="448">
<type>Water</type>
<class>Special</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ConfusionEffect, 0.2]]);
]]>
</init>
</move>

<move name="Water Sport" id="449">
<type>Water</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>15</pp>
<target>All</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Water Spout" id="450">
<type>Water</type>
<class>Special</class>
<power>150</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemies</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Waterfall" id="451">
<type>Water</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.2]]);
]]>
</init>
</move>

<move name="Weather Ball" id="452">
<type>Normal</type>
<class>Special</class>
<power>50</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Whirlpool" id="453">
<type>Water</type>
<class>Special</class>
<power>15</power>
<accuracy>0.70</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Whirlwind" id="454">
<type>Normal</type>
<class>Other</class>
<priority>-6</priority>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Will-o-wisp" id="455">
<type>Fire</type>
<class>Other</class>
<power>0</power>
<accuracy>0.75</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[BurnEffect]]);
]]>
</init>
</move>

<move name="Wing Attack" id="456">
<type>Flying</type>
<class>Physical</class>
<power>60</power>
<accuracy>1.00</accuracy>
<pp>35</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Wish" id="457">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>User</target>
<flags>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Withdraw" id="458">
<type>Water</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>40</pp>
<target>User</target>
<flags>
	<snatch/>
</flags>
<use>
<![CDATA[
user.applyStatus(user, new StatChangeEffect(Stat.DEFENCE, 1));
]]>
</use>
</move>

<move name="Wood Hammer" id="459">
<type>Grass</type>
<class>Physical</class>
<power>120</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeRecoilMove(this, 3);
]]>
</init>
</move>

<move name="Worry Seed" id="460">
<type>Grass</type>
<class>Other</class>
<power>0</power>
<accuracy>1.00</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Wrap" id="461">
<type>Normal</type>
<class>Physical</class>
<power>15</power>
<accuracy>0.85</accuracy>
<pp>20</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Wring Out" id="462">
<type>Normal</type>
<class>Special</class>
<power>1</power>
<accuracy>1.00</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="X-Scissor" id="463">
<type>Bug</type>
<class>Physical</class>
<power>80</power>
<accuracy>1.00</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
</move>

<move name="Yawn" id="464">
<type>Normal</type>
<class>Other</class>
<power>0</power>
<accuracy>0</accuracy>
<pp>10</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<reflect/>
	<memorable/>
	<unimplemented/>
</flags>
<use>
<![CDATA[

]]>
</use>
</move>

<move name="Zap Cannon" id="465">
<type>Electric</type>
<class>Special</class>
<power>120</power>
<accuracy>0.50</accuracy>
<pp>5</pp>
<target>Enemy</target>
<flags>
	<protect/>
	<memorable/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[ParalysisEffect]]);
]]>
</init>
</move>

<move name="Zen Headbutt" id="466">
<type>Psychic</type>
<class>Physical</class>
<power>80</power>
<accuracy>0.90</accuracy>
<pp>15</pp>
<target>Enemy</target>
<flags>
	<contact/>
	<protect/>
	<memorable/>
	<flinch/>
</flags>
<init>
<![CDATA[
makeStatusMove(this, [[FlinchEffect, 0.2]]);
]]>
</init>
</move>

<!--
   This is the move that a pokemon uses when it hits itself in confusion. It
   is referenced only by the implementation of confusion in statuses.js.
-->
<move name="__confusion" id="467">
<type>Typeless</type>
<class>Physical</class>
<power>40</power>
<accuracy>0</accuracy>
<pp>0</pp>
<target>Enemy</target>
<flags>
    <no-critical/>
    <internal/>
</flags>
</move>

</shoddybattle>
